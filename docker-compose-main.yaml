version: '3'

services:
  backend:
    container_name: backend
    networks:
      - backend_network
    build:
      context: .
      dockerfile: Dockerfile_main
    ports:
      - "8000:8000"
    restart: always
    external_links:
      - db-pg:db-pg
      - redis_app:redis_app
    environment:
      - DB_HOST=db-pg
      - REDIS_HOST=redis_app
    depends_on:
        db:
          condition: service_healthy
        redis:
          condition: service_healthy

  db:
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - backend_network
    container_name: db-pg
    command: -p ${DB_PORT}
    expose:
      - ${DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data

    healthcheck:
      test: pg_isready -U ${DB_USER} -p ${DB_PORT}
      interval: 5s
      timeout: 3s
      retries: 3

  redis:
    image: redis:7.2-alpine
    container_name: redis_app
    command: --port ${REDIS_PORT}
    networks:
      - backend_network
    expose:
      - ${REDIS_PORT}
    healthcheck:
      test: redis-cli -p ${REDIS_PORT} ping
      interval: 5s
      timeout: 3s
      retries: 2

networks:
  backend_network:
    name: backend_network
volumes:
  pgdata:
